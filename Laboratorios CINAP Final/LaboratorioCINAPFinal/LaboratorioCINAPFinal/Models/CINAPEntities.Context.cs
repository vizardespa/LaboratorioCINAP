//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LaboratorioCINAPFinal.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LaboratoriosCINAPEntities : DbContext
    {
        public LaboratoriosCINAPEntities()
            : base("name=LaboratoriosCINAPEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Alumno> Alumnoes { get; set; }
        public virtual DbSet<Carrera> Carreras { get; set; }
        public virtual DbSet<DetalleGrupo> DetalleGrupoes { get; set; }
        public virtual DbSet<Grupo> Grupoes { get; set; }
        public virtual DbSet<Laboratorio> Laboratorios { get; set; }
        public virtual DbSet<Maestro> Maestroes { get; set; }
        public virtual DbSet<Material> Materials { get; set; }
        public virtual DbSet<Persona> Personas { get; set; }
        public virtual DbSet<RegistroPrestamoLaboratorio> RegistroPrestamoLaboratorios { get; set; }
        public virtual DbSet<RegistroPrestamoMaterial> RegistroPrestamoMaterials { get; set; }
        public virtual DbSet<Reporte> Reportes { get; set; }
        public virtual DbSet<ReporteItem> ReporteItems { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TipoMaterial> TipoMaterials { get; set; }
        public virtual DbSet<TipoPersona> TipoPersonas { get; set; }
        public virtual DbSet<TipoReporte> TipoReportes { get; set; }
        public virtual DbSet<TipoUsuario> TipoUsuarios { get; set; }
        public virtual DbSet<Usuario> Usuarios { get; set; }
        public virtual DbSet<RelacionPersonaGrupo> RelacionPersonaGrupoes { get; set; }
    
        public virtual int CreacionReporte(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaCierre)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaCierreParameter = fechaCierre.HasValue ?
                new ObjectParameter("FechaCierre", fechaCierre) :
                new ObjectParameter("FechaCierre", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreacionReporte", fechaInicioParameter, fechaCierreParameter);
        }
    
        public virtual int GuardadoReporte(Nullable<bool> guardar)
        {
            var guardarParameter = guardar.HasValue ?
                new ObjectParameter("Guardar", guardar) :
                new ObjectParameter("Guardar", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GuardadoReporte", guardarParameter);
        }
    
        public virtual ObjectResult<ReporteCarreraMaterias_Result> ReporteCarreraMaterias(Nullable<int> idReporte, Nullable<int> idCarrera)
        {
            var idReporteParameter = idReporte.HasValue ?
                new ObjectParameter("IdReporte", idReporte) :
                new ObjectParameter("IdReporte", typeof(int));
    
            var idCarreraParameter = idCarrera.HasValue ?
                new ObjectParameter("IdCarrera", idCarrera) :
                new ObjectParameter("IdCarrera", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteCarreraMaterias_Result>("ReporteCarreraMaterias", idReporteParameter, idCarreraParameter);
        }
    
        public virtual ObjectResult<ReporteCarreras_Result> ReporteCarreras(Nullable<int> idReporte)
        {
            var idReporteParameter = idReporte.HasValue ?
                new ObjectParameter("IdReporte", idReporte) :
                new ObjectParameter("IdReporte", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteCarreras_Result>("ReporteCarreras", idReporteParameter);
        }
    
        public virtual ObjectResult<ReporteCarreraSemestre_Result> ReporteCarreraSemestre(Nullable<int> idReporte, Nullable<int> idCarrera)
        {
            var idReporteParameter = idReporte.HasValue ?
                new ObjectParameter("IdReporte", idReporte) :
                new ObjectParameter("IdReporte", typeof(int));
    
            var idCarreraParameter = idCarrera.HasValue ?
                new ObjectParameter("IdCarrera", idCarrera) :
                new ObjectParameter("IdCarrera", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteCarreraSemestre_Result>("ReporteCarreraSemestre", idReporteParameter, idCarreraParameter);
        }
    
        public virtual ObjectResult<ReporteMaterias_Result> ReporteMaterias(Nullable<int> idReporte)
        {
            var idReporteParameter = idReporte.HasValue ?
                new ObjectParameter("IdReporte", idReporte) :
                new ObjectParameter("IdReporte", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteMaterias_Result>("ReporteMaterias", idReporteParameter);
        }
    
        public virtual ObjectResult<ReporteRangoFechasCarreras_Result> ReporteRangoFechasCarreras(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaCierre)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaCierreParameter = fechaCierre.HasValue ?
                new ObjectParameter("FechaCierre", fechaCierre) :
                new ObjectParameter("FechaCierre", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteRangoFechasCarreras_Result>("ReporteRangoFechasCarreras", fechaInicioParameter, fechaCierreParameter);
        }
    
        public virtual ObjectResult<ReporteRangoFechasCarreraSemestre_Result> ReporteRangoFechasCarreraSemestre(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaCierre, Nullable<int> idCarrera)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaCierreParameter = fechaCierre.HasValue ?
                new ObjectParameter("FechaCierre", fechaCierre) :
                new ObjectParameter("FechaCierre", typeof(System.DateTime));
    
            var idCarreraParameter = idCarrera.HasValue ?
                new ObjectParameter("IdCarrera", idCarrera) :
                new ObjectParameter("IdCarrera", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteRangoFechasCarreraSemestre_Result>("ReporteRangoFechasCarreraSemestre", fechaInicioParameter, fechaCierreParameter, idCarreraParameter);
        }
    
        public virtual ObjectResult<ReporteRangoFechasMaterias_Result> ReporteRangoFechasMaterias(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaCierre)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaCierreParameter = fechaCierre.HasValue ?
                new ObjectParameter("FechaCierre", fechaCierre) :
                new ObjectParameter("FechaCierre", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteRangoFechasMaterias_Result>("ReporteRangoFechasMaterias", fechaInicioParameter, fechaCierreParameter);
        }
    
        public virtual ObjectResult<ReporteRangoFechasSemestres_Result> ReporteRangoFechasSemestres(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaCierre)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaCierreParameter = fechaCierre.HasValue ?
                new ObjectParameter("FechaCierre", fechaCierre) :
                new ObjectParameter("FechaCierre", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteRangoFechasSemestres_Result>("ReporteRangoFechasSemestres", fechaInicioParameter, fechaCierreParameter);
        }
    
        public virtual ObjectResult<ReporteSemestres_Result> ReporteSemestres(Nullable<int> idReporte)
        {
            var idReporteParameter = idReporte.HasValue ?
                new ObjectParameter("IdReporte", idReporte) :
                new ObjectParameter("IdReporte", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteSemestres_Result>("ReporteSemestres", idReporteParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<string> sp_generate_inserts(string table_name, string target_table, Nullable<bool> include_column_list, string from, Nullable<bool> include_timestamp, Nullable<bool> debug_mode, string owner, Nullable<bool> ommit_images, Nullable<bool> ommit_identity, Nullable<int> top, string cols_to_include, string cols_to_exclude, Nullable<bool> disable_constraints, Nullable<bool> ommit_computed_cols)
        {
            var table_nameParameter = table_name != null ?
                new ObjectParameter("table_name", table_name) :
                new ObjectParameter("table_name", typeof(string));
    
            var target_tableParameter = target_table != null ?
                new ObjectParameter("target_table", target_table) :
                new ObjectParameter("target_table", typeof(string));
    
            var include_column_listParameter = include_column_list.HasValue ?
                new ObjectParameter("include_column_list", include_column_list) :
                new ObjectParameter("include_column_list", typeof(bool));
    
            var fromParameter = from != null ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(string));
    
            var include_timestampParameter = include_timestamp.HasValue ?
                new ObjectParameter("include_timestamp", include_timestamp) :
                new ObjectParameter("include_timestamp", typeof(bool));
    
            var debug_modeParameter = debug_mode.HasValue ?
                new ObjectParameter("debug_mode", debug_mode) :
                new ObjectParameter("debug_mode", typeof(bool));
    
            var ownerParameter = owner != null ?
                new ObjectParameter("owner", owner) :
                new ObjectParameter("owner", typeof(string));
    
            var ommit_imagesParameter = ommit_images.HasValue ?
                new ObjectParameter("ommit_images", ommit_images) :
                new ObjectParameter("ommit_images", typeof(bool));
    
            var ommit_identityParameter = ommit_identity.HasValue ?
                new ObjectParameter("ommit_identity", ommit_identity) :
                new ObjectParameter("ommit_identity", typeof(bool));
    
            var topParameter = top.HasValue ?
                new ObjectParameter("top", top) :
                new ObjectParameter("top", typeof(int));
    
            var cols_to_includeParameter = cols_to_include != null ?
                new ObjectParameter("cols_to_include", cols_to_include) :
                new ObjectParameter("cols_to_include", typeof(string));
    
            var cols_to_excludeParameter = cols_to_exclude != null ?
                new ObjectParameter("cols_to_exclude", cols_to_exclude) :
                new ObjectParameter("cols_to_exclude", typeof(string));
    
            var disable_constraintsParameter = disable_constraints.HasValue ?
                new ObjectParameter("disable_constraints", disable_constraints) :
                new ObjectParameter("disable_constraints", typeof(bool));
    
            var ommit_computed_colsParameter = ommit_computed_cols.HasValue ?
                new ObjectParameter("ommit_computed_cols", ommit_computed_cols) :
                new ObjectParameter("ommit_computed_cols", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_generate_inserts", table_nameParameter, target_tableParameter, include_column_listParameter, fromParameter, include_timestampParameter, debug_modeParameter, ownerParameter, ommit_imagesParameter, ommit_identityParameter, topParameter, cols_to_includeParameter, cols_to_excludeParameter, disable_constraintsParameter, ommit_computed_colsParameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
