@using LaboratorioCINAPFinal.Models
@model Reporte

@{
    ViewBag.Title = "Detalles Reporte: " + Model.Nombre;
}

<h2>@Html.DisplayFor(model => model.Nombre)</h2>
<h4>@Html.DisplayFor(model => model.FechaInicioPeriodo) - @Html.DisplayFor(model => model.FechaTerminacionPeriodo)</h4>

@using (Html.BeginForm())
{
    <div id="chartContainer" style="width:1200px; height:400px;"></div>
    <div class="form-group">

        <div class="col-md-10">
            @Html.DropDownList("IdTipoReporte", null, "- Selecciona el tipo de reporte -", new { @class = "form-control",  @onchange = "changeReporte(this)" })
        </div>
    </div>
    
}

@section scripts
{
    
    <script type="text/javascript" src="/assets/script/jquery-1.11.1.min.js"></script>
    <script type="text/javascript" src="/assets/script/jquery.canvasjs.min.js"></script>
    

    <script type="text/javascript">

    var chart;
    window.onload = function () {
        chart = new CanvasJS.Chart("chartContainer", {

            title: {
                text: ""
            },
            data: [ ],
            axisX: {
                labelMaxWidth: 110,
                labelWrap: true,
                tickLength: 0,
                valueFormatString: " ",
                labelFontSize: 15
            },
            legend: {
                cursor: "pointer",
                itemclick: function (e) {
                    if (typeof (e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
                        e.dataSeries.visible = false;
                    } else {
                        e.dataSeries.visible = true;
                    }

                    e.chart.render();
                }
            }



        });

        chart.options.data.push({legendText: "Reporte Carrera",
            name: "Carrera",
            showInLegend: false,
            type: "column",
            visible: false,
            indexLabel: "{y}",
            dataPoints: [ ]});
        @foreach (ReporteCarreras_Result result in ViewBag.resCarrera)
        {
            <text>
        chart.options.data[0].dataPoints.push({y: @result.Cantidad, label: "@result.Abreviacion", toolTipContent: "@result.Nombre: @result.Cantidad (@result.Porcentaje%)"})
        </text>
        }

        chart.options.data.push({legendText: "Reporte Materias",
            name: "Materia",
            showInLegend: false,
            type: "column",
            visible: false,
            indexLabel: "{y}",
            dataPoints: [ ]});
        @foreach (ReporteMaterias_Result result in ViewBag.resMateria)
            {
            <text>
        chart.options.data[1].dataPoints.push({y: @result.Cantidad, label: "@result.Materia", toolTipContent: "@result.Materia: @result.Cantidad (@result.Porcentaje%)"})
        </text>
        }

        chart.options.data.push({legendText: "Reporte Semestres",
            name: "Semestre",
            showInLegend: false,
            type: "column",
            visible: false,
            indexLabel: "{y}",
            dataPoints: [ ]});
        @foreach (ReporteSemestres_Result result in ViewBag.resSemestre)
            {
            <text>
        chart.options.data[2].dataPoints.push({y: @result.Cantidad, label: "@result.Semestre° Semestre", toolTipContent: "@result.Semestre° Semestre: @result.Cantidad (@result.Porcentaje%)"})
        </text>
        }

        @foreach (List<ReporteCarreraMaterias_Result> carrera in ViewBag.resCarreraMateria)
            {
            <text>
        chart.options.data.push({legendText: "@carrera[0].Abreviacion",
            name: "CarreraMateria",
            showInLegend: false,
            type: "column",
            visible: false,
            indexLabel: "{y}",
            dataPoints: [ ]});
        if(chart.options.data[chart.options.data.length - 2].name == "CarreraMateria")
        {
            for(i = 0; i < chart.options.data[chart.options.data.length - 2].dataPoints.length; i++)
            {
                chart.options.data[chart.options.data.length - 1].dataPoints.push({y: null, label: chart.options.data[chart.options.data.length - 2].dataPoints[i].label, toolTipContent: ""});
            }
            @foreach (ReporteCarreraMaterias_Result result in carrera)
            {
                <text>
            pos = 0;
            while(pos < chart.options.data[chart.options.data.length - 1].dataPoints.length && "@result.Materia" != chart.options.data[chart.options.data.length - 1].dataPoints[pos].label)
            {
                pos+=1;
            }
            if(pos >= chart.options.data[chart.options.data.length - 1].dataPoints.length)
            {
                chart.options.data[chart.options.data.length - 1].dataPoints.push({y: @result.Cantidad, label: "@result.Materia", toolTipContent: "@result.Abreviacion - @result.Materia: @result.Cantidad (@result.Porcentaje%)"});
            }
            else
            {
                chart.options.data[chart.options.data.length - 1].dataPoints[pos].y = @result.Cantidad;
                chart.options.data[chart.options.data.length - 1].dataPoints[pos].toolTipContent = "@result.Abreviacion - @result.Materia: @result.Cantidad (@result.Porcentaje%)";
            }
            </text>
            }
        }
        else
        {
            @foreach (ReporteCarreraMaterias_Result result in carrera)
            {
                <text>
            chart.options.data[chart.options.data.length - 1].dataPoints.push({y: @result.Cantidad, label: "@result.Materia", toolTipContent: "@result.Abreviacion - @result.Materia: @result.Cantidad (@result.Porcentaje%)"})
            </text>
            }
        }
        </text>
        }

        @foreach (List<ReporteCarreraSemestre_Result> carrera in ViewBag.resCarreraSemestre)
        {
            <text>
        chart.options.data.push({legendText: "@carrera[0].Abreviacion",
            name: "CarreraSemestre",
            showInLegend: false,
            type: "column",
            visible: false,
            indexLabel: "{y}",
            dataPoints: [ ]});
        @for(int i = 0; i < 8; i++)
        {
            <text>
        chart.options.data[chart.options.data.length - 1].dataPoints.push({y: null, label: "@(i+1)° Semestre", toolTipContent: ""})
        </text>
        }
        @foreach (ReporteCarreraSemestre_Result result in carrera)
            {
                <text>
        chart.options.data[chart.options.data.length - 1].dataPoints[@result.Semestre].y = @result.Cantidad;
        chart.options.data[chart.options.data.length - 1].dataPoints[@result.Semestre].toolTipContent = "@result.Abreviacion - @result.Semestre° Semestre: @result.Cantidad (@result.Porcentaje%)";
        </text>
            }
        </text>
    }

        chart.render();

    }

    function changeReporte(value) {
        var i;
        if(value.options[value.selectedIndex].text === "Reporte de Semestres por Carrera")
        {
            chart.options.title.text = "Préstamos en cada Semestre por Carrera";
            for(i = 0; i < chart.options.data.length; i++)
            {
                if(chart.options.data[i].name === "CarreraSemestre")
                {
                    chart.options.data[i].visible = true;
                    chart.options.data[i].showInLegend = true;
                }
                else
                {
                    chart.options.data[i].visible = false;
                    chart.options.data[i].showInLegend = false;
                }
            }
        }
        else if(value.options[value.selectedIndex].text === "Reporte de Materias")
        {
            chart.options.title.text = "Préstamos en cada Materia";
            for(i = 0; i < chart.options.data.length; i++)
            {
                if(chart.options.data[i].name === "Materia")
                {
                    chart.options.data[i].visible = true;
                }
                else
                {
                    chart.options.data[i].visible = false;
                    chart.options.data[i].showInLegend = false;
                }
            }
        }
        else if(value.options[value.selectedIndex].text === "Reporte de Carreras")
        {
            chart.options.title.text = "Préstamos en cada Carrera";
            for(i = 0; i < chart.options.data.length; i++)
            {
                if(chart.options.data[i].name === "Carrera")
                {
                    chart.options.data[i].visible = true;
                }
                else
                {
                    chart.options.data[i].visible = false;
                    chart.options.data[i].showInLegend = false;
                }
            }
        }
        else if(value.options[value.selectedIndex].text === "Reporte de Semestres")
        {
            chart.options.title.text = "Préstamos en cada Semestre";
            for(i = 0; i < chart.options.data.length; i++)
            {
                if(chart.options.data[i].name === "Semestre")
                {
                    chart.options.data[i].visible = true;
                }
                else
                {
                    chart.options.data[i].visible = false;
                    chart.options.data[i].showInLegend = false;
                }
            }
        }
        else if(value.options[value.selectedIndex].text === "Reporte de Materias por Carrera")
        {
            chart.options.title.text = "Préstamos en cada Materia por Carrera";
            for(i = 0; i < chart.options.data.length; i++)
            {
                if(chart.options.data[i].name === "CarreraMateria")
                {
                    chart.options.data[i].visible = true;
                    chart.options.data[i].showInLegend = true;
                }
                else
                {
                    chart.options.data[i].visible = false;
                    chart.options.data[i].showInLegend = false;
                }
            }
        }
        else
        {
            chart.options.title.text = "";
            for(i = 0; i < chart.options.data.length; i++)
            {
                chart.options.data[i].visible = false;
                chart.options.data[i].showInLegend = false;
            }
        }

        chart.render();

    }

</script>


}


    

<p>
    @Html.ActionLink("Editar", "Edit", new { id = Model.ID_Reporte }) |
    @Html.ActionLink("Regresar a la lista", "Index")
</p>
